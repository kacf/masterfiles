#######################################################
#
# Test add multiple packages
#
#######################################################

body common control
{
    inputs => { 
               "../default.cf.sub",
               "../../../libraries/cfengine_stdlib.cf",
              };
    bundlesequence  => { default("$(this.promise_filename)") };
    version => "1.0";
}



#######################################################

bundle agent init
{
    vars:
        "name" slist => { "test-package","test-package-alpha","test-package-beta"};
    packages:
        "$(name)"
        package_policy => "delete";
}

#######################################################

bundle agent test
{
    vars:
        "name" slist => { @(init.name) };
    packages:
    
        debian::
        
            "$(name)"
            package_policy => "add",
            package_method => apt_get,
            classes => test_set_class("pass_$(name)","fail_$(name)");
            
        redhat::
        
            "$(name)"
            package_policy => "add",
            package_method => yum_rpm,
            classes => test_set_class("pass_$(name)","fail_$(name)");
}



body classes test_set_class(ok_class,notok_class)
{
        promise_kept => { "$(ok_class)" };
        promise_repaired => { "$(ok_class)" };
        repair_failed => { "$(notok_class)" };
}

#######################################################

bundle agent check
{
    classes:
    
        debian::
        
            "has_pkg_$(init.name)" expression => returnszero("dpkg -l $(init.name)", "useshell");
            
        redhat::
        
            "has_pkg_$(init.name)" expression => returnszero("/bin/rpm -qa | grep -qw $(init.name)", "useshell");
      
        any::
            "has_file_test_package" expression => fileexists("/dummy.txt");
            "has_file_test_package_alpha" expression => fileexists("/dummy-alpha.txt");
            "has_file_test_package_beta" expression => fileexists("/dummy-beta.txt");

            # Would be nice to test the pass_* and fail_* classes here, but CFEngine
            # doesn't set the classes properly when installing multiple new packages.
            "main_ok" and => { #"pass_test_package", "!fail_test_package",
                               "has_pkg_test_package", "has_file_test_package" };
            "alpha_ok" and => { #"pass_test_package_alpha", "!fail_test_package_alpha",
                                "has_pkg_test_package_alpha", "has_file_test_package_alpha" };
            "beta_ok" and => { #"pass_test_package_beta", "!fail_test_package_beta",
                               "has_pkg_test_package_beta", "has_file_test_package_beta" };
            "ok" and => { "main_ok", "alpha_ok", "beta_ok" };

    reports:
  
        ok::
    
            "$(this.promise_filename) Pass";
      
       !ok::
    
            "$(this.promise_filename) FAIL";
}
